<!-- list-restore.phtml -->

<style type="text/css">
    #link_dialog {padding: .4em 1em .4em 20px;text-decoration: none;position: relative;}
    #link_dialog span.ui-icon {margin: 0 5px 0 0;position: absolute;left: .2em;top: 50%;margin-top: -8px;}
</style>

<script type="text/javascript">
$(function() {
	// tabs
    $("#tabs").tabs();

    // Dialog
    $('#info_dialog').dialog({
        autoOpen: false,
        width: 640,
        height: 480
    });

    // helps for advanced options
    $('#link_dialog').click(function(){
        $('#info_dialog').dialog('open');
        return false;
    });
});
</script>

<script type="text/javascript">
$(document).ready(function() {
	$('#ok1').click(function() {
    	$.blockUI({
        	message: '<h2><?php print $this->translate->_("Please wait"); ?>...</h2>',
        	css: { backgroundColor: '#f3fcf2' },
        	centerX: true,
        	centerY: true
        });
    });
});
</script>

<script type="text/javascript">
  // select
  $(function(){
      $('select').each(function() {
          var t = $(this).selectmenu({maxHeight: 300});
          eval(t);
      });
  });
</script>



<h1 align="center"><?php echo $this->escape($this->title); ?></h1>

<?php if ($this->result): ?>

<?php
    // create array clients for Form
    foreach($this->clients as $client) :
	   $aclients[$this->escape($client->name)] = $this->escape($client->name);
    endforeach;

    // create array filesets for Form  // do not for translate. не переводить
    $afilesets[''] = 'default'; // do not for translate. не переводить
    foreach($this->filesets as $fileset) :
	   $afilesets[$this->escape($fileset->fileset)] = $this->escape($fileset->fileset);
    endforeach;
                                                        // do not for translate. не переводить
    $afilesets[''] = 'default';	// if empty FileSet exists in database

    // create array storages for Form
                                // do not for translate. не переводить
    $astorages[''] = 'default'; // значение не менять! используется далее в runRestoreAction()
    foreach($this->storages as $storage) :
	   $astorages[$this->escape($storage->name)] = $this->escape($storage->name);
    endforeach;
                                // do not for translate. не переводить
    $astorages[''] = 'default';	// if empty FileSet exists in database  // значение не менять! используется далее в runRestoreAction()

    // create array pools for Form // do not for translate. не переводить
    $apools[''] = 'default';
    foreach($this->pools as $pool) :
	   $apools[$this->escape($pool->name)] = $this->escape($pool->name);
    endforeach;
                                // do not for translate. не переводить
    $apools[''] = 'default';	// if empty FileSet exists in database
?>


<div align="center" style="margin: 10px;">
<?php
    echo "<b>", $this->translate->_("Total"), ": ", $this->total_rows,
        " ", $this->translate->_("file(s)"), ", ", $this->convBytes($this->total_size), "</b>" ; ?>
</div>


<div id="tabs" style="width: 58em; margin-left: auto; margin-right: auto;">
<ul>
    <li><a href="#tabs-standard-options"><?php print $this->translate->_("Standard options"); ?></a></li>
    <li><a href="#tabs-advanced-options"><?php print $this->translate->_("Advanced options"); ?></a></li>
</ul>



<div id="tabs-standard-options">

<form method="POST" action="<?php echo $this->baseUrl .'/restorejob/run-restore';?>">

<table border="0" cellpadding="4" cellspacing="0" align="center" width="100%">
<tr>
    <td align="right">
        <label for="client_name_to" class="ui-select"><b><?php print $this->translate->_("Client"); ?></b></label>
    </td>
    <!-- restoreclient -->
   	<td align="left">
       	<?php echo $this->formSelect('client_name_to', $this->client_name_to, array('class' => 'ui-select', 'style' => 'width: 18em;'), $aclients) ?>
    </td>

    <td align="right">
        <label for="pool" class="ui-select"><?php print $this->translate->_("Pool"); ?></label>
    </td>
   	<td align="left">
       	<?php echo $this->formSelect('pool', null, array('class' => 'ui-select', 'style' => 'width: 18em;'), $apools) ?>
    </td>
</tr>
<tr>
    <!-- Replace -->
    <td align="right"> <label for="replace"><?php print $this->translate->_("Replace"); ?></label> </td>
    <td align="left">
        <?php echo $this->formCheckbox('replace'); ?>
    </td>
    <!-- Fileset -->
    <td align="right">
        <label for="fileset" class="ui-select"><?php print $this->translate->_("Fileset"); ?></label>
    </td>
    <td align="left">
        <?php echo $this->formSelect('fileset', null, array('class' => 'ui-select', 'style' => 'width: 18em;'), $afilesets) ?>
    </td>
</tr>
<tr>
    <?php if ( $this->bacula_restore_job ) : ?>
    <!-- if have multiple Restore Job resources -->
    <tr>
    <td align="right">
        <label for="restore_job_select" class="ui-select"><b><?php print $this->translate->_("Restore Job Resource"); ?></b></label>
    </td>
    <td align="left">
        <?php echo $this->formSelect('restore_job_select', null, array('class' => 'ui-select', 'style' => 'width: 18em;'), $this->bacula_restore_job) ?>
    </td>
    <?php else: ?>
        <td colspan="2">&nbsp;</td>
    <?php endif; ?>

    <!-- Storage -->
    <td align="right">
        <label for="storage" class="ui-select"><?php print $this->translate->_("Storage"); ?></label>
    </td>
   	<td align="left">
       	<?php echo $this->formSelect('storage', null, array('class' => 'ui-select', 'style' => 'width: 18em;'), $astorages) ?>
    </td>
</tr>
</table>

</div>
<!-- END tabs-standard-options -->



<div id="tabs-advanced-options">

<p><a href="#" id="link_dialog" class="ui-state-default ui-corner-all">
    <span class="ui-icon ui-icon-info"></span>
    <?php print $this->translate->_("Help"); ?>
</a></p>

<table border="0" cellpadding="4" cellspacing="0" align="center" width="100%">
<tr>
    <!-- Where -->
    <td align="right" valign="middle"> <label for="where"><?php print $this->translate->_("Where"); ?></label> </td>
    <td align="left"  valign="middle"> <?php echo $this->formText('where', '', array('size' => 34)) ?> </td>
    <td><?php print $this->translate->_("Restore files in <b>where</b> directory."); ?></td>
</tr><tr>
    <!-- strip_prefix -->
    <td align="right" valign="middle"> <label for="strip_prefix"><?php print $this->translate->_("Strip&nbsp;prefix"); ?></label> </td>
    <td align="left"  valign="middle"> <?php echo $this->formText('strip_prefix', '', array('size' => 24)) ?> </td>
    <td><?php print $this->translate->_("Remove a part of the filename when restoring."); ?></td>
</tr><tr>
    <!-- add_prefix -->
    <td align="right" valign="middle"> <label for="add_prefix"><?php print $this->translate->_("Add&nbsp;prefix"); ?></label> </td>
    <td align="left"  valign="middle"> <?php echo $this->formText('add_prefix', '', array('size' => 24)) ?> </td>
    <td><?php print $this->translate->_("Add a prefix to all files when restoring (like where) (can't be used with <b>where</b>)."); ?></td>
</tr><tr>
    <!-- add_suffix -->
    <td align="right" valign="middle"> <label for="add_suffix"><?php print $this->translate->_("Add&nbsp;suffix"); ?></label> </td>
    <td align="left"  valign="middle"> <?php echo $this->formText('add_suffix', '', array('size' => 24)) ?> </td>
    <td><?php print $this->translate->_("Add a suffix to all your files."); ?></td>
</tr><tr>
    <!-- regexwhere -->
    <td align="right" valign="middle"> <label for="regexwhere"><?php print $this->translate->_("RegexWhere"); ?></label> </td>
    <td align="left"  valign="middle"> <?php echo $this->formText('regexwhere', '', array('size' => 34)) ?> </td>
    <td><?php print $this->translate->_("Do complex filename manipulation like with sed unix command. Will overwrite other filename manipulation."); ?></td>
</tr>
</table>
</div>
<!-- END tabs-advanced-options -->

<!-- From Bacula manuals main/Restore_Command.html -->
<div id="info_dialog" title="<?php echo $this->translate->_("Help"); ?>">

<h3>Using File Relocation</h3>
<p>For example, many users use OS snapshot features so that file
<tt>/home/eric/mbox</tt> will be backed up from the directory
<tt>/.snap/home/eric/mbox</tt>, which can complicate restores.  If you use
<b>where=/tmp</b>, the file will be restored to
<tt>/tmp/.snap/home/eric/mbox</tt> and you will have to move the file to
<tt>/home/eric/mbox.bkp</tt> by hand.

</p><p>
However, case, you could use the
<b>strip_prefix=/.snap</b> and <b>add_suffix=.bkp</b> options and
Bacula will restore the file to its original location - that is

<tt>/home/eric/mbox</tt>.


<h3>RegexWhere Format</h3>
<p>The format is very close to that used by sed or Perl (<tt>s/replace this/by that/</tt>) operator.
A valid regexwhere expression has three fields :
<ol>
    <LI>a search expression (with optional submatch)</LI>
    <LI>a replacement expression (with optional back references $1 to $9)</LI>
    <LI>a set of search options (only case-insensitive 'i' at this time)</LI>
</ol>
</p><P>Each field is delimited by a separator specified by the user as the first
character of the expression. The separator can be one of the following:
<PRE>
  &lt;separator-keyword&gt; = / ! ; % : , ~ # = &amp;
</PRE>
</p><P>You can use several expressions separated by a commas.<P>

<h3>Examples</h3>
<p>
<table border="1" cellpadding="3">
<thead>
    <th scope="col">Orignal filename</th>
    <th scope="col">New filename</th>
    <th scope="col">RegexWhere</th>
    <th scope="col">Comments</th>
</thead>
<tbody>
<tr><td align="CENTER"><tt>c:/system.ini</tt></td>
<td align="CENTER"><tt>c:/system.old.ini</tt></td>
<td align="CENTER"><tt>/.ini$/.old.ini/</tt></td>
<td align="LEFT">$ matches end of name</td>
</tr>
<tr><td align="CENTER"><tt>/prod/u01/pdata/</tt></td>
<td align="CENTER"><tt>/rect/u01/rdata</tt></td>
<td align="CENTER"><tt>/prod/rect/,/pdata/rdata/</tt></td>

<td align="LEFT">uses two regexp</td>
</tr>
<tr><td align="CENTER"><tt>/prod/u01/pdata/</tt></td>
<td align="CENTER"><tt>/rect/u01/rdata</tt></td>
<td align="CENTER"><tt>!/prod/!/rect/!,/pdata/rdata/</tt></td>
<td align="LEFT">use <tt>!</tt> as separator</td>
</tr>
<tr><td align="CENTER"><tt>C:/WINNT</tt></td>

<td align="CENTER"><tt>d:/WINNT</tt></td>
<td align="CENTER"><tt>/c:/d:/i</tt></td>
<td align="LEFT">case insensitive pattern match</td>
</tr>
</tbody></table>
</p>

</div>



<table border="0" cellpadding="3" cellspacing="0" align="center">
<tr>
    <td align="center">
		    <?php echo $this->formSubmit('ok1', $this->translate->_('Run Restore Job'), array('class' => 'prefer_btn') ); ?>
        </form>
    </td>
    <td>&nbsp; &nbsp;</td>
    <td align="center">
        <form method="POST" action="<?php echo $this->baseUrl .'/restorejob/cancel-restore';?>">
            <?php echo $this->formSubmit('cancel1', $this->translate->_('Cancel') ); ?>
        </form>
    </td>
</tr>
</table>

</div>

<br style="clear: both;" />



<?php $decode = new MyClass_HomebrewBase64; ?>

<div align="center">
<table id="box-table-minimalist" border="0">
<thead>
<tr>
     <th scope="col" colspan="4"> <?php print $this->translate->_("Attribute"); ?> </th>
     <th scope="col"> <?php print $this->translate->_("Name File"); ?> </th>
     <th scope="col"> <?php print $this->translate->_("File Id"); ?> </th>
</tr>
</thead>
<tbody>
<?php foreach($this->result as $line) : ?>
<tr>
<?php
	// LStat example:
	// MI OfON IGk B Bk Bl A e BAA I BGkZWg BGkZWg BGkZWg A A E
	list($st_dev, $st_ino, $st_mode, $st_nlink, $st_uid, $st_gid, $st_rdev, $st_size, $st_blksize,
		$st_blocks, $st_atime, $st_mtime, $st_ctime) = preg_split("/[\s]+/", $line['lstat']);

	if ( $decode->homebrewBase64($st_dev) == 0 )     {
		// OS : windows
		echo '<td>' , date("d-M-y H:i:s", $decode->homebrewBase64($st_mtime)) , '</td><td>' ,
			$this->convBytes($decode->homebrewBase64($st_size)) , '</td>',
			'<td></td><td></td>';
	}
	else {
		// OS : linux/unix
		echo '<td>' , $this->permissionOctal2String(($decode->homebrewBase64($st_mode))), '</td><td>' ,
			$decode->homebrewBase64($st_uid), " &nbsp;",  $decode->homebrewBase64($st_gid),'</td><td>',
			date("d-M-y H:i:s", $decode->homebrewBase64($st_mtime)),'</td><td>',
			$this->convBytes($decode->homebrewBase64($st_size)), '</td>';
	}
?>
</td>

	<td><?php echo $this->escape($line['path'] . $line['name']);?>&nbsp;&nbsp;
	<td> &nbsp; <?php echo $this->escape($line['fileid']) ?> &nbsp;</td>
	</td>
</tr>
<?php endforeach; ?>
</tbody>
</table>

</div>

<center>&nbsp;
<?php
// pager
if ( $this->total_pages > 1 )   {

	// Make links

	for( $i = 1 ; $i <= $this->total_pages ; $i++ ) {
		if ( $i == $this->current_page )
			echo $i;
		else
			echo '<a href="' . $this->baseUrl .'/restorejob/list-restore/page/' . $i . '">' . $i . "</a>";

		echo " &nbsp;\n";
	}
}
?>
</center>

<?php else: ?>
	<div align="center"><p><b><?php print $this->translate->_("No Files found."); ?></b></p></div>
<?php endif; ?>
